#!/bin/bash
#
# @@script: backup.sh
# @@description: incremental backup init script
# @@author: Loouis Low <loouis@gmail.com>
# @@license: MIT License
# @@copyright: Loouis Low (https://github.com/loouislow81/equilibrium)
#

# ansi
RED='\e[91m'
NC='\033[0m'
TITLE="${RED}(equilibrium)${NC}"
ARROW="${RED}>>${NC}"
MSG_DELETED="${RED}(deleted!)${NC}"
MSG_DIR_SIZE="${RED}($GET_DIR_SIZE)${NC}"

# configurations
export USER="loouis"
export HOME="/media/loouis/EX-VOLUME"
BACKUP_DIR="${HOME}/backup"
DEST_DIR="usr-loouis"
MEDIUM="/media/loouis/EX-VOLUME"
BACKUP_SOURCE="/home/loouis"
BACKUP_DESTINATION="${MEDIUM}/backup/usr-loouis"
BACKUP_SIZE="/dev/sda2"
LOG="${BACKUP_SOURCE}/backup.log"
DEL_DIRS_CONF="/usr/loca/bin/directories.conf"

root_only() {
  if [ "$(whoami &2> /dev/null)" != "root" ] &&
     [ "$(id -un &2> /dev/null)" != "root" ]; then
    echo -e "$TITLE permission denied."
    exit 1
  fi
}

create_marker() {
  echo -e "$TITLE create backup marker..."
  mkdir -p "$BACKUP_DESTINATION"
  touch "$BACKUP_DESTINATION/backup.marker"
}

run_backup() {
  echo -e "$TITLE started..."
  equilibrium ${BACKUP_SOURCE} ${BACKUP_DESTINATION}
  echo -e "$TITLE backup $ARROW done!"
}

shrink_volume() {
  for s in $(cat ${DEL_DIRS_CONF}); do
    GET_DIR_SIZE=`du -hs ${s} | awk '{ print $1 }'`
    echo -e " $ARROW ${GET_DIR_SIZE} $s ${MSG_DELETED}"
    rm -rf "$s"
  done
}

backup_size() {
  echo -e "$TITLE calculate backup size..."
  df -h ${BACKUP_SIZE}
}

write_log() {
  echo -e "$TITLE sync finished at " `date` $ARROW ${LOG}
}

###### init ######

root_only
create_marker
run_backup
shrink_volume
write_log
backup_size

